{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;\f2\fmodern\fcharset0 Courier;
}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 MY NOTES\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs22 \cf0 \CocoaLigature0 xcode-select --install
\f0\fs24 \CocoaLigature1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
\
## needed to install the ggplot2 package in R - this is after R is installed with Homebrew (so it can link with PostgreSQL appropriately)\
\
## also make sure to open xquartz, or install it if you don\'92t have it. \
\
## IN TERMINAL\
\
brew tap homebrew/science\
\
brew install r r-gui ruby\
brew linkapps\
\
gem install rest-client json polylines\
\
\
# RUN ANALYSIS SCRIPTS IN TERMINAL\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs22 \cf0 \CocoaLigature0 psql nyc-citibike-data -f prepare_analysis.sql
\f0\fs24 \CocoaLigature1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
## IN R\
\
\pard\pardeftab720\sl280\partightenfactor0

\f2 \cf0 \expnd0\expndtw0\kerning0
install.packages('ggplot2', dep = TRUE)\
install.packages('dplyr', dep = TRUE)\
install.packages('extrafont', dep = TRUE)\
install.packages('ggmap', dep = TRUE)\
install.packages('rgdal', dep = TRUE)\
install.packages('maptools', dep = TRUE)\
install.packages('readr', dep = TRUE)\
install.packages('minpack.lm', dep = TRUE)\
install.packages('', dep = TRUE)\
## these take a while\
install.packages('plotrix', dep = TRUE)\
install.packages('corrplot', dep = TRUE)\
\
# move to working directory\
setwd("/Users/samuelestabrook/Documents/git/bikeshare-dc/analysis")\
\
# check directory\
getwd()\
\
## run analysis\
source("basic_analysis.R")\
source("signal_charting.R")\
\
\
Download from \
http://download.geofabrik.de\
South US\
\
Clip to DC area using Osmosis\
takes about 5 min to clip\
\
osmosis --rb us-south-latest.osm.pbf --bounding-box left=-77.50 right=-76.50 top=39.25 bottom=38.50 --wb dc-area.osm.pbf\
\
bbox\
-77.50\
-76.50\
39.25\
38.50\
\
for shell scripts\
\

\f1\fs22 \kerning1\expnd0\expndtw0 \CocoaLigature0 chmod +x download_dc_osm.sh
\f2\fs24 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\
\
\
\
\
http://localhost:5000/viaroute?loc=38.89,-77.15&loc=38.89,-77.12&instructions=true\
\
\
\
\
\
gem install pg\
\
NEED TO FOR THE DIRECTIONS\
\
somehow connect the database and utilize the station locations per trip. probably need to edit the stations file - check the example analysis.\
\
adapt the query to the local REST API, and try to get output placed into a csv - just like the example. need to look at the example input table to ensure the continuity of the data analysis.\
\
\
\
\
\
\
psql -d bikesharedb -a -f /Users/samuelestabrook/Desktop/metro_closest_signal.sql\
\
psql -d bikesharedb -a -f /Users/samuelestabrook/Desktop/trial_script.sql\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs22 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 COPY (SELECT DISTINCT target_name FROM wmata) TO '/Users/samuelestabrook/Desktop/wmata_stations.csv' DELIMITER ',' CSV HEADER;
\f2\fs24 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\pardeftab720\sl280\partightenfactor0
\cf0 \
\
\
metrofailcast.com\
jferrara@\
redcast.com\
?? maybe? not sure\
\
transitscreen\
1776\
\
march4th-5th dc open data day\
@fixwmata\
\
github.com/aelindeman/wmata-with-you\
\
github.com/andrewyue\
\
metro hero\
dcmetrohero.com}